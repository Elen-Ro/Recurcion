import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.math.BigInteger;

public class ComputeFactorial {

    // Recursive function
    public static BigInteger factorial(int n) {
        if (n == 1) {
            return BigInteger.ONE;
        } else {
            return BigInteger.valueOf(n).multiply(factorial(n - 1));
        }
    }

    // Non-recursive function
    public static BigInteger nFactorial(int n) {
        BigInteger factorial = BigInteger.ONE;
        for (int i = 1; i <= n; i++)
            factorial = factorial.multiply(new BigInteger(i + ""));
        return factorial;
    }

    public static void main(String[] args) {

        // Create a CSV file
        try (PrintWriter writer = new PrintWriter(new File("FactorialReport.csv"))) {
            writer.append("Integer,Recursive time,Iterative time");
            writer.append("\n");

            // Use at least 20 different values of n from 5 to 100 with increments of 5
            for (int i = 1; i < 101; i++) {
                i = i + 4;
                System.out.print("\nNumber: " + i);

                System.out.println("\nRecursive call: the factorial of " + i + " is " + factorial(i));
                System.out.println("Iterative call: the factorial of " + i + " is " + nFactorial(i));

                // The time function to find the time spent for different values of n using recursive call
                long start = System.nanoTime();
                factorial(i);
                long end = System.nanoTime();
                long duration1 = end - start;
                System.out.println("Recursive calculation of factorial " + i + " was " + duration1 + " nanoseconds");

                // The time function to find the time spent for different values of n using non-recursive call
                start = System.nanoTime();
                nFactorial(i);
                end = System.nanoTime();
                long duration2 = end - start;
                System.out.println("Iterative calculation of factorial " + i + " was " + duration2 + " nanoseconds");

                // Display the results in a CSV file
                StringBuilder sb = new StringBuilder();
                sb.append(i);
                sb.append(',');
                sb.append(duration1);
                sb.append(',');
                sb.append(duration2);
                sb.append('\n');

                writer.write(sb.toString());
            }
        } catch (FileNotFoundException e) {
            System.out.println(e.getMessage());
        }
    }
}




